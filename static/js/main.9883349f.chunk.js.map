{"version":3,"sources":["actions/index.ts","dataModels/EmojiCategoryDataModel.ts","components/TranslationResultItem/index.tsx","components/TranslationResult/index.tsx","components/EditorTextarea/index.tsx","components/MessagePanes/index.tsx","components/CategoryFilterSelect/index.tsx","icons/github.svg","icons/email.svg","components/App/index.tsx","dataModels/EmojiDataModel.ts","reducers/translationReducer.ts","reducers/categoryFiltersReducer.ts","reducers/messageReducer.ts","reducers/rootReducer.ts","store.ts","serviceWorker.ts","index.tsx"],"names":["Category","emojiCategories","EmojiCategoryDataModel","get","key","shortcode","Object","freeze","TranslationResultItem","unicode","word","dictionaryMatch","category","codePoint","String","fromCodePoint","split","map","bit","parseInt","StyledColumn","TranslationResult","contentParts","codePointsDictionary","length","index","StyledContainer","StyledTextarea","StyledScreenReadLabel","EditorTextarea","setDebouncedMessage","useState","textareaValue","setTextareaValue","id","handleChange","useCallback","event","target","value","htmlFor","placeholder","onChange","MessagePanes","dispatch","useDispatch","useSelector","state","categoryFilter","translation","throttledHandleFormChange","callback","delay","timeoutRef","useRef","callbackRef","lastCalledRef","useEffect","current","window","clearTimeout","invoke","Date","now","elapsedTime","setTimeout","useThrottledCallback","content","type","payload","StyledLabel","styled","label","StyledSelect","select","CategoryFilterSelect","className","selectOptions","keys","replace","text","toUpperCase","option","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","d","_ref","svgRef","title","props","focusable","role","viewBox","ref","ForwardRef","forwardRef","globalStyles","css","containerStyle","navBarStyle","linkStyle","iconStyle","App","styles","marginBottom","backgroundColor","href","marginRight","fontWeight","rel","paddingTop","paddingBottom","QUERY_REGEX","emojis","data","EmojiDataModel","getAll","match","toLowerCase","query","initialState","translationReducer","action","words","trim","resultWords","dictionary","setMatchInDictionary","forEach","nextWord","push","categoryFiltersReducer","all","messageReducer","combineReducers","message","middlewares","thunkMiddleware","middleWareEnhancer","applyMiddleware","store","createStore","rootReducer","compose","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.9883349f.chunk.js","sourcesContent":["export const UPDATE_MESSAGE = 'UPDATE_MESSAGE';\nexport const UPDATE_CATEGORY_FILTER = 'UPDATE_CATEGORY_FILTER';\n\nexport enum Category {\n  all = 'all',\n  smileysAndPeople = 'smileysAndPeople',\n  animalsAndNature = 'animalsAndNature',\n  foodAndDrink = 'foodAndDrink',\n  activity = 'activity',\n  travelAndPlaces = 'travelAndPlaces',\n  objects = 'objects',\n  symbols = 'symbols',\n  flags = 'flags',\n}\n\nexport type CategoryFilter = Exclude<Category, Category.all> | null;\n\nexport type TranslationDictionary = {\n  [key: string]: string[];\n};\n\nexport type TranslationState = {\n  contentParts?: string[];\n  codePointsDictionary?: TranslationDictionary;\n};\n\nexport type MessageState = {\n  content: string;\n};\n\nexport type CategoryFilterState = {\n  category: CategoryFilter | Category.all;\n};\n\ntype UpdateMessage = {\n  readonly type: typeof UPDATE_MESSAGE;\n  readonly payload: MessageState;\n};\n\ntype UpdateCategoryFilter = {\n  readonly type: typeof UPDATE_CATEGORY_FILTER;\n  readonly payload: CategoryFilterState;\n};\n\nexport type ActionTypes = UpdateMessage | UpdateCategoryFilter;\n\nexport const updateMessage = (payload: MessageState): UpdateMessage => ({\n  type: UPDATE_MESSAGE,\n  payload,\n});\n\nexport const updateCategoryFilter = (\n  payload: CategoryFilterState\n): UpdateCategoryFilter => ({\n  type: UPDATE_CATEGORY_FILTER,\n  payload,\n});\n","import data from '../data/emojiCategoryData.json';\nimport { Category } from '../actions';\n\ntype NonNullCategoryFilter = Exclude<Category, Category.all>;\n\nexport type EmojiCategoryDataJson = {\n  readonly [key in NonNullCategoryFilter]: {\n    [key: string]: number;\n  };\n};\n\nconst emojiCategories: EmojiCategoryDataJson = data;\n\nconst EmojiCategoryDataModel = {\n  get: (key: NonNullCategoryFilter, shortcode: string): number | null =>\n    emojiCategories[key][shortcode] || null,\n};\n\nexport default Object.freeze(EmojiCategoryDataModel);\n","import React from 'react';\nimport { CategoryFilter } from '../../actions';\nimport EmojiCategoryDataModel from '../../dataModels/EmojiCategoryDataModel';\n\ntype Props = {\n  word: string;\n  dictionaryMatch?: string[];\n  category?: CategoryFilter;\n};\n\nconst TranslationResultItem: React.FC<Props> = ({\n  word,\n  dictionaryMatch = [],\n  category,\n}) => {\n  const [codePoint, shortcode] = dictionaryMatch;\n  let unicode;\n\n  if (codePoint) {\n    if (!category || EmojiCategoryDataModel.get(category, shortcode)) {\n      unicode = String.fromCodePoint(\n        ...codePoint.split('-').map((bit) => parseInt(bit, 16))\n      );\n    }\n  }\n\n  return <> {unicode || word}</>;\n};\n\nexport default TranslationResultItem;\n","import React from 'react';\nimport styled from '@emotion/styled/macro';\nimport { TranslationState, CategoryFilter } from '../../actions';\nimport TranslationResultItem from '../TranslationResultItem';\n\ntype Props = {\n  category: CategoryFilter;\n} & TranslationState;\n\nconst StyledColumn = styled.div`\n  flex-basis: 0;\n  flex-grow: 1;\n  max-width: 100%;\n  width: 100%;\n  min-height: 160px;\n  padding: 18px 24px;\n  border-top: 1px solid rgba(219, 237, 243, 0.3);\n\n  @media (min-width: 768px) {\n    border-top: 0;\n    border-left: 1px solid rgba(219, 237, 243, 0.3);\n  }\n`;\n\nconst TranslationResult: React.FC<Props> = ({\n  contentParts = [],\n  codePointsDictionary = {},\n  category,\n}) => {\n  if (!contentParts.length) {\n    return <StyledColumn>Translation</StyledColumn>;\n  }\n\n  return (\n    <StyledColumn>\n      {contentParts.map((word, index) => (\n        <TranslationResultItem\n          key={word + index}\n          dictionaryMatch={codePointsDictionary[word]}\n          word={word}\n          category={category}\n        />\n      ))}\n    </StyledColumn>\n  );\n};\n\nexport default TranslationResult;\n","import React, { useCallback, useState } from 'react';\nimport styled from '@emotion/styled/macro';\n\nconst StyledContainer = styled.div`\n  width: 100%;\n  position: relative;\n  flex-basis: 0;\n  flex-grow: 1;\n  max-width: 100%;\n  width: 100%;\n`;\n\nconst StyledTextarea = styled.textarea`\n  border: 0;\n  color: #dbedf3;\n  padding: 18px 24px;\n  background-color: transparent;\n  min-height: 160px;\n  height: 100%;\n  width: 100%;\n  resize: none;\n\n  ::-webkit-input-placeholder {\n    color: rgba(219, 237, 243, 0.5);\n  }\n`;\n\nconst StyledScreenReadLabel = styled.label`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  -webkit-clip-path: inset(50%);\n  clip-path: inset(50%);\n  border: 0;\n\n  :focus,\n  :active {\n    clip: auto !important;\n    -webkit-clip-path: none !important;\n    clip-path: none !important;\n    height: auto !important;\n    margin: auto !important;\n    overflow: visible !important;\n    width: auto !important;\n    white-space: normal !important;\n  }\n`;\n\ntype Props = {\n  setDebouncedMessage: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst EditorTextarea: React.FC<Props> = ({ setDebouncedMessage }) => {\n  const [textareaValue, setTextareaValue] = useState('');\n\n  const id = 'editorTextarea';\n\n  const handleChange = useCallback(\n    (event) => {\n      setTextareaValue(event.target.value);\n      setDebouncedMessage(event.target.value);\n    },\n    [setTextareaValue, setDebouncedMessage]\n  );\n\n  return (\n    <StyledContainer>\n      <StyledScreenReadLabel htmlFor={id}>\n        Enter text that you want to convert to emoji\n      </StyledScreenReadLabel>\n      <StyledTextarea\n        id={id}\n        placeholder=\"Enter text that you want to convert to emoji\"\n        onChange={handleChange}\n        value={textareaValue}\n      />\n    </StyledContainer>\n  );\n};\n\nexport default EditorTextarea;\n","import React, { useRef, useEffect, useCallback } from 'react';\nimport styled from '@emotion/styled/macro';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateMessage, TranslationState, CategoryFilter } from '../../actions';\nimport TranslationResult from '../TranslationResult';\nimport EditorTextarea from '../EditorTextarea';\nimport { AppState } from '../../store';\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid rgba(219, 237, 243, 0.3);\n  border-radius: 12px;\n  background-color: #283149;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.12);\n  overflow: hidden;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    align-items: stretch;\n  }\n`;\n\nconst useThrottledCallback: Function = (\n  callback: (content: string) => void,\n  delay: number\n) => {\n  const timeoutRef = useRef<number>();\n  const callbackRef = useRef(callback);\n  const lastCalledRef = useRef(0);\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  }, [callback]);\n\n  useEffect(() => window.clearTimeout(timeoutRef.current), [delay]);\n\n  return useCallback(\n    (value: string) => {\n      window.clearTimeout(timeoutRef.current);\n\n      const invoke = (): void => {\n        callbackRef.current(value);\n        lastCalledRef.current = Date.now();\n      };\n\n      const elapsedTime = Date.now() - lastCalledRef.current;\n\n      if (elapsedTime >= delay) {\n        invoke();\n      } else {\n        timeoutRef.current = window.setTimeout(invoke, delay - elapsedTime);\n      }\n    },\n    [delay]\n  );\n};\n\nconst MessagePanes: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const category = useSelector<AppState, CategoryFilter>(\n    (state) => state.categoryFilter.category\n  );\n  const { contentParts, codePointsDictionary } = useSelector<\n    AppState,\n    TranslationState\n  >((state) => state.translation);\n\n  const throttledHandleFormChange = useThrottledCallback(\n    (content: string) => dispatch(updateMessage({ content })),\n    500\n  ) as (event: React.ChangeEvent<HTMLInputElement>) => void;\n\n  return (\n    <StyledContainer>\n      <EditorTextarea setDebouncedMessage={throttledHandleFormChange} />\n      <TranslationResult\n        contentParts={contentParts}\n        category={category}\n        codePointsDictionary={codePointsDictionary}\n      />\n    </StyledContainer>\n  );\n};\n\nexport default MessagePanes;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateCategoryFilter, Category } from '../../actions';\nimport styled from '@emotion/styled';\n\ntype Props = {\n  className?: string;\n};\n\nconst StyledLabel = styled.label`\n  margin-right: 6px;\n`;\n\nconst StyledSelect = styled.select`\n  position: relative;\n  color: rgba(219, 237, 243, 0.7);\n  font-size: 17px;\n  line-height: normal;\n  padding: 0 3px;\n  background-color: transparent;\n  border: 1px solid;\n  border-width: 0 0 1px 0;\n  border-radius: 0;\n  -webkit-appearance: none;\n`;\n\nconst CategoryFilterSelect: React.FC<Props> = ({ className }) => {\n  const dispatch = useDispatch();\n\n  const selectOptions = Object.keys(Category).map((key) => {\n    const label = key\n      .replace(/([A-Z])/g, ' $1')\n      .replace(/^./, (text) => text.toUpperCase())\n      .replace(' And ', ' & ');\n\n    return { value: key, label };\n  });\n\n  const handleOnChange = (\n    event: React.ChangeEvent<HTMLSelectElement>\n  ): void => {\n    const { value } = event.target;\n    const category: Category = Category[value as keyof typeof Category];\n    dispatch(updateCategoryFilter({ category }));\n  };\n\n  return (\n    <div className={className}>\n      <StyledLabel htmlFor=\"Category\">Filter emojis</StyledLabel>\n\n      <StyledSelect id=\"Category\" onChange={handleOnChange}>\n        {selectOptions.map((option) => (\n          <option value={option.value} key={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </StyledSelect>\n    </div>\n  );\n};\n\nexport default CategoryFilterSelect;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"\n});\n\nvar SvgGithub = function SvgGithub(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    role: \"img\",\n    viewBox: \"0 0 496 512\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGithub, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/github.f5789c95.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM178.117 262.104C87.429 196.287 88.353 196.121 64 177.167V152c0-13.255 10.745-24 24-24h272c13.255 0 24 10.745 24 24v25.167c-24.371 18.969-23.434 19.124-114.117 84.938-10.5 7.655-31.392 26.12-45.883 25.894-14.503.218-35.367-18.227-45.883-25.895zM384 217.775V360c0 13.255-10.745 24-24 24H88c-13.255 0-24-10.745-24-24V217.775c13.958 10.794 33.329 25.236 95.303 70.214 14.162 10.341 37.975 32.145 64.694 32.01 26.887.134 51.037-22.041 64.72-32.025 61.958-44.965 81.325-59.406 95.283-70.199z\"\n});\n\nvar SvgEmail = function SvgEmail(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    role: \"img\",\n    viewBox: \"0 0 448 512\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgEmail, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/email.9663e759.svg\";\nexport { ForwardRef as ReactComponent };","/** @jsx jsx */\nimport { Global, jsx, css } from '@emotion/core';\nimport MessagePanes from '../MessagePanes';\nimport CategoryFilterSelect from '../CategoryFilterSelect';\nimport { ReactComponent as GitHubIcon } from '../../icons/github.svg';\nimport { ReactComponent as EmailIcon } from '../../icons/email.svg';\n\nconst globalStyles = css`\n  html {\n    box-sizing: border-box;\n  }\n\n  body,\n  html {\n    color: #dbedf3;\n    background-color: #404b69;\n    font-family: 'Roboto', sans-serif;\n    font-size: 17px;\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n`;\n\nconst containerStyle = css`\n  max-width: 1240px;\n  margin: 0 auto;\n  padding-left: 18px;\n  padding-right: 18px;\n`;\n\nconst navBarStyle = css`\n  background-color: #283149;\n  padding: 10px 0;\n\n  @media (min-width: 576px) {\n    display: flex;\n    padding: 0;\n  }\n`;\n\nconst linkStyle = css`\n  display: flex;\n  align-items: center;\n  color: rgba(219, 237, 243, 0.7);\n  padding: 12px;\n  margin: 0 12px;\n  text-decoration: none;\n`;\n\nconst iconStyle = css`\n  height: 24px;\n  width: 24px;\n  margin-right: 7px;\n`;\n\nconst App: React.FC = () => {\n  return (\n    <main>\n      <Global styles={globalStyles} />\n\n      <header\n        css={{ marginBottom: -70, backgroundColor: 'rgba(40, 49, 73, 0.7)' }}\n      >\n        <div css={navBarStyle}>\n          <a\n            href=\"/\"\n            css={[linkStyle, { marginRight: 'auto', fontWeight: 700 }]}\n          >\n            Text to Emoji\n          </a>\n\n          <a href=\"mailto:hello@juliantrueflynn.com\" css={linkStyle}>\n            <EmailIcon css={iconStyle} />\n            hello@juliantrueflynn.com\n          </a>\n\n          <a\n            href=\"https://github.com/juliantrueflynn/text-to-emoji-typescript\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            css={linkStyle}\n          >\n            <GitHubIcon css={iconStyle} />\n            GitHub\n          </a>\n        </div>\n\n        <CategoryFilterSelect\n          css={[containerStyle, { paddingTop: 10, paddingBottom: 80 }]}\n        />\n      </header>\n\n      <form css={containerStyle}>\n        <MessagePanes />\n      </form>\n    </main>\n  );\n};\n\nexport default App;\n","import data from '../data/emojiData.json';\n\nconst QUERY_REGEX = /[^a-zA-Z0-9]/g;\n\ntype EmojiDataJson = {\n  readonly [key: string]: string[];\n};\n\ntype EmojiData = {\n  readonly query: string;\n  readonly codePoint: string;\n  readonly shortcode: string;\n};\n\nconst emojis: EmojiDataJson = data;\n\nconst EmojiDataModel = {\n  getAll: (): EmojiDataJson => emojis,\n  get: (key: string): EmojiData | null => {\n    const formatWord = (text: string): string =>\n      text.toLowerCase().replace(QUERY_REGEX, '');\n    const match = emojis[formatWord(key)];\n\n    if (!match) {\n      return null;\n    }\n\n    return {\n      query: key,\n      codePoint: match[0],\n      shortcode: match[1],\n    };\n  },\n};\n\nexport default Object.freeze(EmojiDataModel);\n","import {\n  TranslationState,\n  TranslationDictionary,\n  ActionTypes,\n  UPDATE_MESSAGE,\n} from '../actions';\nimport EmojiDataModel from '../dataModels/EmojiDataModel';\n\nconst initialState: TranslationState = {\n  contentParts: [],\n  codePointsDictionary: {},\n};\n\nfunction translationReducer(\n  state = initialState,\n  action: ActionTypes\n): TranslationState {\n  switch (action.type) {\n    case UPDATE_MESSAGE: {\n      const words: string[] = action.payload.content.trim().split(' ');\n      const resultWords: string[] = [];\n      const dictionary: TranslationDictionary = {};\n\n      const setMatchInDictionary = (query: string): void => {\n        const match = EmojiDataModel.get(query);\n\n        if (match) {\n          dictionary[query] = [match.codePoint, match.shortcode];\n        }\n      };\n\n      words.forEach((word: string, index: number) => {\n        const nextWord = words[index + 1];\n        const match = nextWord && setMatchInDictionary(`${word} ${nextWord}`);\n        !match && setMatchInDictionary(word);\n        resultWords.push(word);\n      });\n\n      return {\n        contentParts: resultWords,\n        codePointsDictionary: dictionary,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default translationReducer;\n","import {\n  ActionTypes,\n  UPDATE_CATEGORY_FILTER,\n  Category,\n  CategoryFilter,\n} from '../actions';\n\ntype CategoryFilterStateProps = {\n  category: CategoryFilter;\n};\n\nconst initialState: CategoryFilterStateProps = {\n  category: null,\n};\n\nfunction categoryFiltersReducer(\n  state = initialState,\n  action: ActionTypes\n): CategoryFilterStateProps {\n  switch (action.type) {\n    case UPDATE_CATEGORY_FILTER: {\n      const { payload } = action;\n      const category =\n        Category.all === payload.category ? null : payload.category;\n\n      return { category };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default categoryFiltersReducer;\n","import { MessageState, ActionTypes, UPDATE_MESSAGE } from '../actions';\n\nconst initialState: MessageState = {\n  content: '',\n};\n\nfunction messageReducer(\n  state = initialState,\n  action: ActionTypes\n): MessageState {\n  switch (action.type) {\n    case UPDATE_MESSAGE: {\n      return {\n        content: action.payload.content,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default messageReducer;\n","import { combineReducers } from 'redux';\nimport translationReducer from './translationReducer';\nimport categoryFiltersReducer from './categoryFiltersReducer';\nimport messageReducer from './messageReducer';\n\nexport default combineReducers({\n  translation: translationReducer,\n  categoryFilter: categoryFiltersReducer,\n  message: messageReducer,\n});\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './reducers/rootReducer';\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nconst middlewares = [];\nmiddlewares.push(thunkMiddleware);\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(createLogger());\n}\n\nconst middleWareEnhancer = applyMiddleware(...middlewares);\nconst store = createStore(rootReducer, compose(middleWareEnhancer));\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\nimport 'normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}